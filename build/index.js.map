{"version":3,"file":"index.js","mappings":"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","sources":["../../webpack/universalModuleDefinition","../../webpack/bootstrap","../../webpack/runtime/define property getters","../../webpack/runtime/hasOwnProperty shorthand","../../webpack/runtime/make namespace object","../../node_modules/@babel/runtime/helpers/esm/createClass.js","App.js","../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MentorJS\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MentorJS\"] = factory();\n\telse\n\t\troot[\"MentorJS\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import \"./css/App.scss\"\r\n\r\n/**\r\n * MentorJS v1.0\r\n * https://github.com/ndnci/mentorjs\r\n *\r\n * Copyright (C) 2019 NDNCI - www.ndnci.com\r\n */\r\nclass MentorJS {\r\n\r\n    constructor(globalConfig) {\r\n\r\n        // other parameters\r\n        this._globalConfig = globalConfig;\r\n        this._isOpened = null;\r\n        this._stepsArray = [];\r\n        this._modalOptions = {};\r\n\r\n        // settings for all script\r\n        this._settings = {\r\n            // auto start script or not, params: true | false\r\n            autoRun: true,\r\n            // any existing step, for the first \"0\"\r\n            stepFrom: 0,\r\n        };\r\n\r\n        // config for all modals\r\n        this._config = {\r\n                // params: dark | light\r\n                theme: \"light\",\r\n                // params: zoom | pulse | bounce | toLeft | toRight | toTop | toBottom\r\n                animation: null,\r\n                // area with background effect\r\n                backgroundArea: document.querySelector(\"body\"),\r\n                // effect for backgroundArea when modal run\r\n                backgroundEffectClass: \"mentor-blur\",\r\n                // effect on defined target when modal run\r\n                targetNoEffectClass: \"mentor-noblur\",\r\n                // class will add to hidden target\r\n                targetToggleClass: \"mentor-toggle\",\r\n                // scroll to element/target when modal opened, params: true | false\r\n                autoScroll: true,\r\n                // params: scrollIntoView | scrollTo\r\n                scrollMethod: \"scrollTo\",\r\n                // params: target | modal\r\n                scrollOn: \"modal\",\r\n                // params: auto | smooth, behavior is not supported by Safari\r\n                scrollBehavior: \"smooth\",\r\n                // needs \"scrollIntoView\", params: start | center | end | nearest\r\n                scrollBlock: \"center\",\r\n                scrollInline: \"center\",\r\n                // custom class names\r\n                modalDivClass: \"mentor-modal\",\r\n                modalDivHeaderClass: \"mentor-modal-header\",\r\n                modalDivHeaderCloseClass: \"close\",\r\n                modalDivBodyClass: \"mentor-modal-body\",\r\n                modalDivFooterClass: \"mentor-modal-footer\",\r\n                previousButtonClass: \"mentor-btn mentor-modal-previous\",\r\n                nextButtonClass: \"mentor-btn mentor-modal-next\",\r\n                endButtonClass: \"mentor-btn mentor-modal-end\",\r\n                // open button for open concerned modal, must be unique per step\r\n                // you can not set this option on all modals, ex: \"#step1\"\r\n                openButtonId: null,\r\n                // custom close button id without \"#\", close only current step, ex: \"customClose\"\r\n                closeButtonId: \"modalClose\",\r\n                // custom texts, allows HTML tags\r\n                previousButtonText: \"&laquo; Back\",\r\n                nextButtonText: \"Next &raquo;\",\r\n                endButtonText: \"Thanks\",\r\n                // order of modal, ex: 5\r\n                order: null,\r\n                // title of modal, allow HTML tags\r\n                title: null,\r\n                // content of message, allow HTML tags\r\n                message: null,\r\n                // target who will be not affected by background effect\r\n                target: null,\r\n                // show close button on header\r\n                closeButton: false,\r\n                // show header\r\n                showHeader: true,\r\n                // show footer\r\n                showFooter: true,\r\n                // show arrows\r\n                showArrow: true,\r\n                // exit modal on outside click\r\n                outsideClick: false,\r\n                // show target if its hidden and after hide\r\n                targetAutoShow: false,\r\n                // space between modal and target, only number, max 10 recommended\r\n                // if you customise the arrow style, you should add arrow width too\r\n                margin: 10,\r\n                // horizontal align of modal, params: left | center | right | auto\r\n                horizontal: \"auto\",\r\n                // vertical align of modal, params: top | center | bottom | auto\r\n                vertical: \"auto\",\r\n                // if true, script modal be responsive\r\n                responsive: true,\r\n                /* wait time ( for actual modal ) when user click to next or previous button\r\n                   default is 0 for modal speed, but if previous or next modal\r\n                   is near of actual modal, you can get a problem with click (touchstart)\r\n                   on mobile devices, if you added \"touchstart\" event and have this problem\r\n                   on mobile, you can change it, the recommended value is \"300\",\r\n                   modal will be faster on mobile and large screen\r\n                   and you will not have a problem with button clicks (touchstart) */\r\n                wait: 0,\r\n                // you can define events for listener function\r\n                // you can add multiple events with space \" \" between events\r\n                // for exemple : \"click touchstart mouseover\" etc.\r\n                events: \"click\",\r\n                // you can disable the modal on mobile\r\n                mobileSupport: true,\r\n                /* dont change this values, script need this and auto change them values */\r\n                positionTop: null\r\n        };\r\n    }\r\n\r\n    /* ******************** getters and setters for variables */\r\n    getConfig(key) {\r\n        return this._config[key];\r\n    }\r\n    setConfig(key, value) {\r\n        this._config[key] = value;\r\n    }\r\n    getSetting(key) {\r\n        return this._settings[key];\r\n    }\r\n    setSetting(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    getModalOption(key) {\r\n        return this._modalOptions[key];\r\n    }\r\n    setModalOption(key, value) {\r\n        this._modalOptions[key] = value;\r\n    }\r\n    getCurrentStep() {\r\n        return this.getSetting('stepFrom');\r\n    }\r\n    setCurrentStep(value) {\r\n        this.setSetting('stepFrom', value);\r\n    }\r\n\r\n    /* ******************** getters for models */\r\n    getModelHeader() {\r\n        return `<div class=\"${this.getModalOption('modalDivHeaderClass')}\">\r\n                    ${this.getModelTitle()}\r\n                    ${this.getModalOption('closeButton') ? this.getModelHeaderClose() : \"\"}\r\n                </div>`;\r\n    }\r\n    getModelHeaderClose() {\r\n        return `<span class=\"${this.getModalOption('modalDivHeaderCloseClass')}\" id=\"${this.getModalOption('closeButtonId')}\"></span>`;\r\n    }\r\n    getModelTitle() {\r\n        return `<span>${this.getModalOption('title')}</span>`;\r\n    }\r\n    getModelBody() {\r\n        return `<div class=\"${this.getModalOption('modalDivBodyClass')}\">${this.getModalOption('message')}</div>`;\r\n    }\r\n    getModelPreviousButton() {\r\n        return `<button class=\"${this.getModalOption('previousButtonClass')}\">${this.getModalOption('previousButtonText')}</button>`;\r\n    }\r\n    getModelNextButton() {\r\n        return `<button class=\"${this.getModalOption('nextButtonClass')}\">${this.getModalOption('nextButtonText')}</button>`;\r\n    }\r\n    getModelEndButton() {\r\n        return `<button class=\"${this.getModalOption('endButtonClass')}\">${this.getModalOption('endButtonText')}</button>`;\r\n    }\r\n    getModelFooter() {\r\n        return `<div class=\"${this.getModalOption('modalDivFooterClass')}\">\r\n                    ${!this.isFirstStep() ? this.getModelPreviousButton() : \"\"}\r\n                    ${!this.isLastStep() ? this.getModelNextButton() : this.getModelEndButton()}\r\n                </div>`;\r\n    }\r\n\r\n    /* ******************** other getters */\r\n    getCurrenStepVal(key) {\r\n        let value = this._stepsArray[this.getCurrentStep()][key];\r\n        // if config is not defined by user\r\n        // set it to modal config value\r\n        if(value === undefined) value = this.getConfig(key);\r\n        return value;\r\n    }\r\n\r\n    // use for change modal index on declared array\r\n    goToStep(index) {\r\n        // check if step exists\r\n        if(this._stepsArray[index]) {\r\n            // pass to next step\r\n            this.setCurrentStep(index);\r\n            // go to next modal with new informations\r\n            this.resetModal();\r\n        } else {\r\n            // if not close the last modal\r\n            this.closeModal();\r\n        }\r\n    }\r\n\r\n    // check if step is the last of array\r\n    isFirstStep() {\r\n        return this.getCurrentStep() == 0;\r\n    }\r\n\r\n    // check if step is the last of array\r\n    isLastStep() {\r\n        return this.getCurrentStep() == (this._stepsArray.length - 1);\r\n    }\r\n\r\n    // make a modal template\r\n    modalElementModel() {\r\n        return `${this.getModalOption('showHeader') && this.getModalOption('title') ? this.getModelHeader() : \"\"}\r\n                ${this.getModelBody()}\r\n                ${this.getModalOption('showFooter') ? this.getModelFooter() : \"\"}`;\r\n    }\r\n\r\n    /* ******************** Declared parameters when page is loaded */\r\n    updateConfig() {\r\n\r\n        // get all declared global configs and change default values\r\n        Object.getOwnPropertyNames(this._globalConfig).forEach(function(key) {\r\n            this.setConfig(key, this._globalConfig[key]);            \r\n        }, this);\r\n\r\n        return this;\r\n    }\r\n    // all settings\r\n    settings(settingsObj) {\r\n        // get all declared settings and change default values\r\n        Object.getOwnPropertyNames(settingsObj).forEach(function(key) {\r\n            this.setSetting(key, settingsObj[key]);            \r\n        }, this);\r\n        \r\n        return this;\r\n    }\r\n    // all declared steps\r\n    steps(objectsArray) {\r\n\r\n        // update all config declared values\r\n        if(this._globalConfig) this.updateConfig();\r\n\r\n        // get all objects declared in this function\r\n        objectsArray.forEach(function(object) {\r\n\r\n            // add object to array for stockage\r\n            this._stepsArray.push(object);\r\n\r\n            // reorder objects with order value\r\n            objectsArray.sort(function(a, b) {\r\n                return a.order - b.order;\r\n            });\r\n\r\n        }, this);\r\n\r\n        // if device is mobile and support is false, remove all not supported\r\n        // steps on array\r\n        if(this.isMobile()) {\r\n            this._stepsArray = this._stepsArray.filter(function (step) {\r\n                return step.mobileSupport != false\r\n            });\r\n        }\r\n        \r\n        // if auto open is true open modal \r\n        if(this.getSetting('autoRun')) this.run();\r\n\r\n        return this;\r\n    }\r\n\r\n    // go to previous step\r\n    backStep() {\r\n        this.goToStep(this.getCurrentStep() - 1);\r\n        return this;\r\n    }\r\n\r\n    // go to next step\r\n    nextStep() {\r\n        this.goToStep(this.getCurrentStep() + 1);\r\n        return this;\r\n    }\r\n\r\n    /* ******************** Inner functions */\r\n\r\n    openModal() {\r\n\r\n        // disable open button\r\n        if(this.getModalOption('openButtonId')) {\r\n            document.getElementById(this.getModalOption('openButtonId')).setAttribute(\"disabled\",\"disabled\");\r\n        }\r\n\r\n        // add background effect to DOM\r\n        this.insertElementAfter(this.getModalOption('backgroundArea'), \"div\", this.getModalOption('backgroundEffectClass'));\r\n        \r\n        // create modal div on body\r\n        let newModal = this.getModalOption('modalDivClass');\r\n        if(this.getModalOption('theme')) newModal += \" \" + this.getModalOption('theme');\r\n        if(this.getModalOption('animation')) newModal += \" \" + this.getModalOption('animation');\r\n        this.insertElementAfter(this.getModalOption('backgroundArea'), \"div\", newModal, this.modalElementModel());\r\n\r\n        // hide all showing divs\r\n        [].forEach.call(document.getElementsByClassName(this.getModalOption('targetToggleClass')), function(el) {\r\n            el.classList.remove(this.getModalOption('targetToggleClass'));\r\n        }, this);\r\n\r\n        // if target is defined\r\n        if(this.getModalOption('target')) {\r\n\r\n            // if auto show enabled, toggle hidden element\r\n            if(this.getModalOption('targetAutoShow')) {\r\n                this.showHiddenElement(this.element(this.getModalOption('target')));\r\n            }\r\n\r\n            // add show class to target\r\n            this.element(this.getModalOption('target')).classList.add(this.getModalOption('targetNoEffectClass'));\r\n        }\r\n\r\n        // define modal position\r\n        this.moveModal();\r\n\r\n        if(this.getModalOption('autoScroll')) {\r\n            this.scrollModal();\r\n        }\r\n\r\n            // set open status to true\r\n            this._isOpened = true;\r\n    }\r\n      \r\n    closeModal() {\r\n\r\n        // enable open button\r\n        if(this.getModalOption('openButtonId')) {\r\n            document.getElementById(this.getModalOption('openButtonId')).removeAttribute(\"disabled\");\r\n        }\r\n\r\n        // remove div bg effect on background\r\n        let bgEffect = document.getElementsByClassName(this.getModalOption('backgroundEffectClass'))[0];\r\n        if(bgEffect) bgEffect.remove();\r\n\r\n        // if target is defined previously, remove show class\r\n        if(this.getModalOption('target')) {\r\n            this.element(this.getModalOption('target')).classList.remove(this.getModalOption('targetNoEffectClass'));\r\n        }\r\n\r\n        // remove created modal element\r\n        let previousModal = document.getElementsByClassName(this.getModalOption('modalDivClass'))[0];\r\n        if(previousModal) previousModal.remove();\r\n\r\n        // set open status to false\r\n        this._isOpened = false;\r\n    }\r\n\r\n    // update all modal informations\r\n    updateModal() {\r\n        // update all informations for new modal\r\n        Object.getOwnPropertyNames(this._config).forEach(function(key) {\r\n            this.setModalOption(key, this.getCurrenStepVal(key));            \r\n        }, this);\r\n    }\r\n\r\n    // close current modal and update modal informations, after open new modal\r\n    resetModal() {\r\n        // close current modal\r\n        this.closeModal();\r\n        // update modal informations\r\n        this.updateModal();\r\n        // open new modal\r\n        this.openModal();\r\n    }\r\n\r\n    // move modal to target position if it was declared\r\n    moveModal() {\r\n        \r\n        // get screen size\r\n        let windowWidth = document.documentElement.clientWidth;\r\n        let windowHeight = Math.max( document.body.scrollHeight, document.body.offsetHeight, \r\n                                     document.documentElement.clientHeight,\r\n                                     document.documentElement.scrollHeight,\r\n                                     document.documentElement.offsetHeight );\r\n                                     \r\n        // get modal informations\r\n        let modalElement = document.getElementsByClassName(this.getModalOption('modalDivClass'))[0];\r\n        let modalHeight = modalElement.offsetHeight;\r\n        let modalWidth = modalElement.offsetWidth;\r\n\r\n        // get new offsets for position of modal\r\n        let newTop, newLeft;\r\n        let newWidth = modalWidth;\r\n        let margin = this.getModalOption('margin');\r\n\r\n        // if target is defined\r\n        if(this.getModalOption('target')) {\r\n\r\n            // target is set from config\r\n            let target = this.element(this.getModalOption('target'));\r\n            let targetPosition = this.getOffset(target);\r\n            let targetHeight = target.offsetHeight;\r\n            let targetWidth = target.offsetWidth;\r\n\r\n            // if vertical is auto, change value automatically\r\n            if(this.getModalOption('horizontal') == \"auto\") {\r\n                // if space between element left and window is too short\r\n                // move element to right\r\n                if(targetPosition.left > modalWidth) {\r\n                    this.setModalOption('horizontal', 'left');\r\n                } else {\r\n                    this.setModalOption('horizontal', 'right');\r\n                }\r\n                // if horizontal is right and\r\n                // screen width is smaller than total of calc ( and small screens)\r\n                // move element to center horizontally\r\n                if(\r\n                    (\r\n                    this.getModalOption('horizontal') == \"right\" &&\r\n                    (targetPosition.left + targetWidth + modalWidth + margin) > windowWidth\r\n                    ) || windowWidth < 650) {\r\n                    this.setModalOption('horizontal', 'center');\r\n                }\r\n            }\r\n\r\n            // if vertical is auto, change value automatically\r\n            if(this.getModalOption('vertical') == \"auto\") {\r\n                // if space between element top and window is too short\r\n                // move element to bottom\r\n                if(targetPosition.top > modalHeight) {\r\n                    this.setModalOption('vertical', 'top');\r\n                } else {\r\n                    this.setModalOption('vertical', 'bottom');\r\n                }\r\n\r\n                // if horizontal is not center, we have a space left or right for modal\r\n                // if space between top and bottom of target is larger than half of modal\r\n                if(\r\n                    (this.getModalOption('horizontal') != \"center\") &&\r\n                    (targetPosition.top > (modalHeight / 2)) &&\r\n                    (windowHeight - targetPosition.top - modalHeight) > (modalHeight / 2)\r\n                )\r\n                {\r\n                    // so move it to center vertically\r\n                    this.setModalOption('vertical', 'center');\r\n                }\r\n            }\r\n            \r\n            // check modal horizontal option\r\n            switch (this.getModalOption('horizontal')) {\r\n                case \"left\":\r\n                    // get actual modal height for calculate and substract it from target top\r\n                    newLeft = targetPosition.left - modalWidth - margin;\r\n                break;\r\n                case \"center\":\r\n                    newLeft = targetPosition.left + ((targetWidth  - modalWidth) / 2);\r\n                break;\r\n                case \"right\":\r\n                    newLeft = targetPosition.left + targetWidth + margin;\r\n                break;\r\n            }\r\n\r\n            // check modal vertical option\r\n            switch (this.getModalOption('vertical')) {\r\n                case \"top\":\r\n                    // get actual modal height for calculate and substract it from target top\r\n                    newTop = targetPosition.top - modalHeight - margin;\r\n                break;\r\n                case \"center\":\r\n                    newTop = targetPosition.top + ((targetHeight  - modalHeight) / 2);\r\n                break;\r\n                case \"bottom\":\r\n                    newTop = targetPosition.top + targetHeight + margin;\r\n                break;\r\n            }\r\n\r\n            // if arrows is enabled\r\n            if(this.getModalOption('showArrow')) {\r\n\r\n                let arrowClass;\r\n\r\n                if(this.getModalOption('horizontal') == \"center\") {\r\n                    arrowClass = this.getModalOption('vertical');\r\n                } else {\r\n                    arrowClass = this.getModalOption('horizontal');\r\n                }\r\n\r\n                // if position is diagonal\r\n                if(this.getModalOption('vertical') != \"center\" && this.getModalOption('horizontal') != \"center\") {\r\n                    arrowClass = this.getModalOption('vertical') + \"-\" + this.getModalOption('horizontal');\r\n                }\r\n                // add modal position to div class\r\n                modalElement.classList.add(arrowClass);\r\n            }\r\n        } else {\r\n            // if target is not defined, center modal element\r\n            newTop = (window.innerHeight - modalHeight) / 2;\r\n            newLeft = (windowWidth - modalWidth) / 2;\r\n        }\r\n\r\n        // if responsive is enabled\r\n        if(this.getModalOption('responsive') && this.getModalOption('horizontal') == \"center\") {\r\n            // if modal left value is negative or smaller than margin ( mobile device generally )\r\n            // or the left margin + modal + margin total size is bigger than screen\r\n            // set it to center of screen, with defined margin and 100% width\r\n            if(newLeft < 0 || newLeft < margin || (newLeft + modalWidth + margin) > windowWidth) {\r\n                // 50 is the random value, it's not specific or calculated\r\n                // for exemple : screen : 500px and modal 490px\r\n                // 490 - 50, so modal width = 450px for center\r\n                newWidth = windowWidth - (margin * 2) - 50;\r\n                newLeft = 0;\r\n                // css for center the modal\r\n                modalElement.style.cssText = `right: 0;\r\n                                              margin-left: auto;\r\n                                              margin-right: auto;`;\r\n            }\r\n        }\r\n\r\n        // set top position on options, for scrollTo() etc\r\n        this.setModalOption('positionTop', newTop);\r\n\r\n        // change actual modal position\r\n        modalElement.style.cssText += `position: absolute !important;\r\n                                       top: ${newTop}px;\r\n                                       left: ${newLeft}px;\r\n                                       width: ${newWidth}px;`;\r\n    }\r\n\r\n    scrollModal() {\r\n        \r\n        // choose element to scroll\r\n        let scrollElement;\r\n        if(this.getModalOption('scrollOn') == \"target\") {\r\n            scrollElement = this.element(this.getModalOption('target'));\r\n        } else {\r\n            scrollElement = document.getElementsByClassName(this.getModalOption('modalDivClass'))[0];\r\n        }\r\n\r\n        // auto scroll\r\n        if(this.getModalOption('scrollMethod') == \"scrollIntoView\") {\r\n            scrollElement.scrollIntoView({\r\n                behavior: this.getModalOption('scrollBehavior'),\r\n                block: this.getModalOption('scrollBlock'),\r\n                inline: this.getModalOption('scrollInline')\r\n            });\r\n        } else {\r\n            window.scrollTo({\r\n                top: this.getModalOption('positionTop') - ( window.innerHeight / 2 ),\r\n                behavior: this.getModalOption('scrollBehavior')\r\n            });\r\n        }\r\n    }\r\n\r\n    /* ******************** Custom functions for short and lisible code */\r\n\r\n    // custom event listener for multiple events\r\n    addEventListeners(el, s, fn) {\r\n        s.split(' ').forEach(e => el.addEventListener(e, fn, false));\r\n    }\r\n\r\n    // short element selector personalized\r\n    element(selector, type = \"query\") {\r\n        if(type == \"query\") return document.querySelector(selector);\r\n        if(type == \"class\") return document.getElementsByClassName(selector)[0];\r\n        if(type == \"id\") return document.getElementById(selector);\r\n    }\r\n\r\n    // returns true if the element or one of its parents has the class classname\r\n    hasSomeParentTheClass(element, classname) {\r\n        if(element.parentNode) {\r\n            if (element.className.split(' ').indexOf(classname)>=0) return true;\r\n            return element.parentNode && this.hasSomeParentTheClass(element.parentNode, classname);\r\n        }\r\n    }\r\n\r\n    // this function will deteck if the element\r\n    showHiddenElement(element) {\r\n\r\n        // check display of actual element and add custom style class for display block etc\r\n        if(getComputedStyle(element, null).display == \"none\") {\r\n            element.classList.add(this.getModalOption('targetToggleClass'));\r\n        }\r\n        // check if element have parent and element is not hidden\r\n        if(element.parentNode && getComputedStyle(element, null).display !== \"none\") {\r\n\r\n            if (getComputedStyle(element.parentNode, null).display == \"none\") {\r\n                return element.parentNode.classList.add(this.getModalOption('targetToggleClass'));\r\n            }\r\n            // loop function if nothing founded\r\n            return this.showHiddenElement(element.parentNode);\r\n        }\r\n    }\r\n\r\n    // get element position\r\n    getOffset( el ) {\r\n        var _x = 0;\r\n        var _y = 0;\r\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\r\n            // on mobile dont calc scrollTop and scrollLeft, for exemple Safari\r\n            // will return a different number everytime so script\r\n            // can get the real top distance\r\n            if(this.isMobile()) {\r\n                _x += (el.offsetLeft + el.clientLeft);\r\n                _y += (el.offsetTop + el.clientTop);\r\n            } else {\r\n                _x += (el.offsetLeft - el.scrollLeft + el.clientLeft);\r\n                _y += (el.offsetTop - el.scrollTop + el.clientTop);\r\n            }\r\n            el = el.offsetParent;\r\n        }\r\n        return { top: _y, left: _x };\r\n    }\r\n    \r\n    // Check if event target id or class is equal to query\r\n    targetQueryValidator(event, query) {\r\n        return (\r\n            event.target.id == query.replace(\"#\", \"\") ||\r\n            event.target.className == query.replace(\".\", \"\")\r\n        );\r\n    }\r\n\r\n    // Custom element adder into DOM after specific element\r\n    insertElementAfter(whichElement, tagName, className, content = \"\") {\r\n        let element = document.createElement(tagName);\r\n        element.setAttribute(\"class\", className);\r\n        element.innerHTML = content;\r\n        whichElement.parentNode.insertBefore(element, whichElement.nextSibling);\r\n    }\r\n\r\n    isMobile() {\r\n        var check = false;\r\n        (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n        return check;\r\n    }\r\n\r\n    /* ******************** Script run and custom listener */\r\n\r\n    run() {\r\n        // update informations and open modal\r\n        this.updateModal();\r\n        this.openModal();\r\n        // start to listen all events declared on this function\r\n        this.listener();\r\n    }\r\n\r\n    listener() {\r\n\r\n        let previousEventChecker, nextEventChecker;\r\n\r\n        // Detect click on anywhere\r\n        this.addEventListeners(document, this.getModalOption('events'), (event) => {\r\n\r\n            // clear all events timeouts for\r\n            // prevent multiple clicks on the same time \r\n            clearTimeout(previousEventChecker);\r\n            clearTimeout(nextEventChecker);\r\n\r\n            // Ignore other click events\r\n            event.stopPropagation();\r\n            \r\n            // Detect click on anywhere of outside modal element if its activated\r\n            if(this.getModalOption('outsideClick') && !this.hasSomeParentTheClass(event.target, this.getModalOption('modalDivClass'))) {\r\n                this.closeModal();\r\n            }\r\n\r\n            // Detect click on specific close button\r\n            if(this.targetQueryValidator(event, this.getModalOption('closeButtonId'))) {\r\n                this.closeModal();\r\n            }\r\n            \r\n            // Detect specific open button click\r\n            if(event.target.id) {\r\n\r\n                let concernedStep = this._stepsArray.findIndex(function(step) {\r\n                    return step.openButtonId == event.target.id;\r\n                });\r\n                \r\n                if(concernedStep) this.goToStep(concernedStep);\r\n            }\r\n\r\n            // wait for going to previous step\r\n            previousEventChecker = setTimeout(() => {\r\n                // Detect previous button click or defined key\r\n                if(this.targetQueryValidator(event, this.getModalOption('previousButtonClass'))) {\r\n                    // go to previous step number if current is not the first step\r\n                    if( !this.isFirstStep() ) this.backStep();\r\n                }\r\n            }, this.getModalOption('wait'));\r\n\r\n            // wait for going to next step\r\n            nextEventChecker = setTimeout(() => {\r\n                // Detect next button click or defined key\r\n                if(this.targetQueryValidator(event, this.getModalOption('nextButtonClass'))) {\r\n                    // go to next step number if current is not the last step\r\n                    if( !this.isLastStep() ) this.nextStep();\r\n                }\r\n            }, this.getModalOption('wait'));\r\n\r\n            // Detect end button click or defined key\r\n            if(this.targetQueryValidator(event, this.getModalOption('endButtonClass'))) {\r\n                if( this.isLastStep() ) this.closeModal();\r\n            }\r\n        });\r\n\r\n        // if responsive is enabled\r\n        if(this.getModalOption('responsive')) {\r\n            \r\n            // if windows size change, reset modal with new position etc\r\n            window.addEventListener(\"resize\", () => {\r\n                // reset modal on only large screens\r\n                if(!this.isMobile() && this._isOpened) this.resetModal();\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default MentorJS;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import MentorJS from './App';\r\nexport default MentorJS;"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_defineProperties","target","props","i","length","descriptor","configurable","writable","MentorJS","globalConfig","instance","Constructor","TypeError","_classCallCheck","_globalConfig","_isOpened","_stepsArray","_modalOptions","_settings","autoRun","stepFrom","_config","theme","animation","backgroundArea","document","querySelector","backgroundEffectClass","targetNoEffectClass","targetToggleClass","autoScroll","scrollMethod","scrollOn","scrollBehavior","scrollBlock","scrollInline","modalDivClass","modalDivHeaderClass","modalDivHeaderCloseClass","modalDivBodyClass","modalDivFooterClass","previousButtonClass","nextButtonClass","endButtonClass","openButtonId","closeButtonId","previousButtonText","nextButtonText","endButtonText","order","title","message","closeButton","showHeader","showFooter","showArrow","outsideClick","targetAutoShow","margin","horizontal","vertical","responsive","wait","events","mobileSupport","positionTop","protoProps","staticProps","getSetting","setSetting","concat","getModalOption","getModelTitle","getModelHeaderClose","isFirstStep","getModelPreviousButton","isLastStep","getModelEndButton","getModelNextButton","getCurrentStep","undefined","getConfig","index","setCurrentStep","resetModal","closeModal","getModelHeader","getModelBody","getModelFooter","getOwnPropertyNames","forEach","setConfig","settingsObj","objectsArray","updateConfig","object","push","sort","a","b","isMobile","filter","step","run","goToStep","getElementById","setAttribute","insertElementAfter","newModal","modalElementModel","getElementsByClassName","el","classList","remove","showHiddenElement","element","add","moveModal","scrollModal","removeAttribute","bgEffect","previousModal","setModalOption","getCurrenStepVal","updateModal","openModal","newTop","newLeft","windowWidth","documentElement","clientWidth","windowHeight","Math","max","body","scrollHeight","offsetHeight","clientHeight","modalElement","modalHeight","modalWidth","offsetWidth","newWidth","arrowClass","targetPosition","getOffset","targetHeight","targetWidth","left","top","window","innerHeight","style","cssText","scrollElement","scrollIntoView","behavior","block","inline","scrollTo","s","fn","split","e","addEventListener","selector","type","arguments","classname","parentNode","className","indexOf","hasSomeParentTheClass","getComputedStyle","display","_x","_y","isNaN","offsetLeft","offsetTop","clientLeft","clientTop","scrollLeft","scrollTop","offsetParent","event","query","id","replace","whichElement","tagName","content","createElement","innerHTML","insertBefore","nextSibling","check","navigator","userAgent","vendor","opera","test","substr","listener","previousEventChecker","nextEventChecker","_this","addEventListeners","clearTimeout","stopPropagation","targetQueryValidator","concernedStep","findIndex","setTimeout","backStep","nextStep"],"sourceRoot":""}